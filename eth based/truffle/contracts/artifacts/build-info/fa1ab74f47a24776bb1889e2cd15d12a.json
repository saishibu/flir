{
	"id": "fa1ab74f47a24776bb1889e2cd15d12a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"eth based/truffle/contracts/FLIR_Contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n\npragma solidity >=0.4.4;\n\n// library for logging in console\n// import \"hardhat/console.sol\";\n\n\ncontract FLIRContract{\n    \n    mapping(address => uint256) private balaces;\n    mapping(address => role) private roles;\n    \n    // mapping(uint256 => address payable) Prosumers;\n    // mapping(uint256 => address payable) Consumers;\n    // mapping(uint256 => address payable) Nanogrid;\n    // mapping(uint256 => address payable) EV;\n    enum role{\n        Prosumers,\n        Consumers,\n        Nanogrid,\n        EV\n    }\n\n    uint public balance = 0;\n    // constructor() public{}\n\n    // uint public nP;\n    // uint public nC;\n    // uint public nEV;\n\n    uint public btp = 3;\n\n    uint public btc1 = 3;\n    uint public btc2 = 4;\n    uint public btc3 = 5;\n    uint public btc4 = 6;\n    uint public btc5 = 7;\n    uint public btc6 = 8;\n    uint public btc7 = 9;\n    uint public btc8 = 10;\n\n\n    \n\n    function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public\n    returns (uint nP,uint nC,uint nEV){\n        \n        nP = nPget;\n        nC = nCget;\n        nEV = nEVget;\n        // console.log(\"NP = %s\",nP);\n        // console.log(\"NC = %s\",nC);\n        // console.log(\"NEV = %s\",nEV);\n        return (nP,nC,nEV);\n    }\n\n    function getProsumerTariff(uint Pexp) public returns (uint Tp){\n        Tp = Pexp * btp;\n        return (Tp);\n    }\n\n    function getConsumerTariff(uint Cimp) public returns (uint Tc){\n        \n        if(Cimp < 251){\n            if(Cimp < 51){\n                Tc = Cimp * btc1;\n            }\n            else if(Cimp > 50 && Cimp < 101){\n                Tc = (50 * btc1) + ((Cimp-50) * btc2);\n            }\n            else if(Cimp > 100 && Cimp < 151){\n                Tc = (50 * btc1) + (50 * btc2) + ((Cimp-50) * btc3);\n            }\n            else if(Cimp > 150 && Cimp < 201){\n                Tc = (50 * btc1) + (50 * btc2) + (50 * btc3) + ((Cimp-50) * btc4);\n            }\n            else if(Cimp > 200 && Cimp < 251){\n                Tc = (50 * btc1) + (50 * btc2) + (50 * btc3) + (50 * btc4) + ((Cimp-50) * btc5);\n            }\n        }\n        else if(Cimp > 250 && Cimp < 351){\n            Tc = Cimp * btc6;\n        }\n        else if(Cimp > 350 && Cimp < 451){\n            Tc = Cimp * btc7;\n        }\n        else if(Cimp > 450){\n            Tc = Cimp * btc8;\n        }\n        return (Tc);\n    }\n\n    function send(address _receiver, uint amount) payable public {\n    // _receiver.call.value(msg.value).gas(20317)();\n    require(msg.value >= amount);\n    _receiver.transfer(msg.value);\n    }\n\n    function balCheck() public payable {\n    balance += msg.value;\n    }\n\n\n\n    // function getProsumerTariff(uint nPget, uint nCget,uint nEVget) public{}\n\n    // uint public amount = 1 ether;\n\n\n    // function send(address _addr, uint amount) payable public {\n    //     require(msg.value >= amount);\n    //     _addr.transfer(msg.value);\n    // }\n\n\n//   uint public balance = 0;\n  \n//   function () payable {\n//     balance += msg.value;\n//   }\n\n\n    \n    \n\n//     function integerToString(uint _i) internal pure \n//       returns (string memory) {\n      \n//       if (_i == 0) {\n//          return \"0\";\n//       }\n//       uint j = _i;\n//       uint len;\n      \n//       while (j != 0) {\n//          len++;\n//          j /= 10;\n//       }\n//       bytes memory bstr = new bytes(len);\n//       uint k = len - 1;\n      \n//       while (_i != 0) {\n//          bstr[k--] = byte(uint8(48 + _i % 10));\n//          _i /= 10;\n//       }\n//       return string(bstr);//access local variable\n//    }\n\n\n\n}\n\n// contract Receiver {\n//   uint public balance = 0;\n  \n//   function () payable {\n//     balance += msg.value;\n//   }\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"eth based/truffle/contracts/FLIR_Contract.sol": {
				"FLIRContract": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "btc5",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc4",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc3",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc2",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btp",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "Pexp",
									"type": "uint256"
								}
							],
							"name": "getProsumerTariff",
							"outputs": [
								{
									"name": "Tp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "Cimp",
									"type": "uint256"
								}
							],
							"name": "getConsumerTariff",
							"outputs": [
								{
									"name": "Tc",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "balCheck",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc8",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc6",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc1",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "send",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "btc7",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "nPget",
									"type": "uint256"
								},
								{
									"name": "nCget",
									"type": "uint256"
								},
								{
									"name": "nEVget",
									"type": "uint256"
								}
							],
							"name": "getnPnCnEV",
							"outputs": [
								{
									"name": "nP",
									"type": "uint256"
								},
								{
									"name": "nC",
									"type": "uint256"
								},
								{
									"name": "nEV",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":129:3565  contract FLIRContract{... */\n  mstore(0x40, 0x80)\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":578:579  0 */\n  0x0\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":556:579  uint public balance = 0 */\n  0x2\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":705:706  3 */\n  0x3\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":687:706  uint public btp = 3 */\n  dup1\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":732:733  3 */\n  0x3\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":713:733  uint public btc1 = 3 */\n  0x4\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":758:759  4 */\n  0x4\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":739:759  uint public btc2 = 4 */\n  0x5\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":784:785  5 */\n  0x5\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":765:785  uint public btc3 = 5 */\n  0x6\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":810:811  6 */\n  0x6\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":791:811  uint public btc4 = 6 */\n  0x7\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":836:837  7 */\n  0x7\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":817:837  uint public btc5 = 7 */\n  0x8\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":862:863  8 */\n  0x8\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":843:863  uint public btc6 = 8 */\n  0x9\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":888:889  9 */\n  0x9\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":869:889  uint public btc7 = 9 */\n  0xa\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":914:916  10 */\n  0xa\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":895:916  uint public btc8 = 10 */\n  0xb\n  sstore\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":129:3565  contract FLIRContract{... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"eth based/truffle/contracts/FLIR_Contract.sol\":129:3565  contract FLIRContract{... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":129:3565  contract FLIRContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xc03a1a3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x103347e7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x20e731a1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28780a44\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2c9af64c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c8f6b56\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x721028ec\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7c134b14\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa8bdb68b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4ad7fa9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc2c496ec\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd0679d34\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xed2fa5ab\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf02e48c3\n      eq\n      tag_16\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":817:837  uint public btc5 = 7 */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":817:837  uint public btc5 = 7 */\n      pop\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":791:811  uint public btc4 = 6 */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":791:811  uint public btc4 = 6 */\n      pop\n      tag_21\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":765:785  uint public btc3 = 5 */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":765:785  uint public btc3 = 5 */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":739:759  uint public btc2 = 4 */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":739:759  uint public btc2 = 4 */\n      pop\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":687:706  uint public btp = 3 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":687:706  uint public btp = 3 */\n      pop\n      tag_30\n      jump(tag_31)\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1259:1374  function getProsumerTariff(uint Pexp) public returns (uint Tp){... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1259:1374  function getProsumerTariff(uint Pexp) public returns (uint Tp){... */\n      pop\n      tag_33\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1380:2370  function getConsumerTariff(uint Cimp) public returns (uint Tc){... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1380:2370  function getConsumerTariff(uint Cimp) public returns (uint Tc){... */\n      pop\n      tag_36\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_37)\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2572:2640  function balCheck() public payable {... */\n    tag_9:\n      tag_38\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":895:916  uint public btc8 = 10 */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":895:916  uint public btc8 = 10 */\n      pop\n      tag_41\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":843:863  uint public btc6 = 8 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":843:863  uint public btc6 = 8 */\n      pop\n      tag_44\n      jump(tag_45)\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":556:579  uint public balance = 0 */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":556:579  uint public balance = 0 */\n      pop\n      tag_47\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":713:733  uint public btc1 = 3 */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":713:733  uint public btc1 = 3 */\n      pop\n      tag_50\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2376:2566  function send(address _receiver, uint amount) payable public {... */\n    tag_14:\n      tag_52\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_53)\n    tag_52:\n      stop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":869:889  uint public btc7 = 9 */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":869:889  uint public btc7 = 9 */\n      pop\n      tag_55\n      jump(tag_56)\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":930:1253  function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":930:1253  function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public... */\n      pop\n      tag_58\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_59)\n    tag_58:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":817:837  uint public btc5 = 7 */\n    tag_19:\n      sload(0x8)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":791:811  uint public btc4 = 6 */\n    tag_22:\n      sload(0x7)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":765:785  uint public btc3 = 5 */\n    tag_25:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":739:759  uint public btc2 = 4 */\n    tag_28:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":687:706  uint public btp = 3 */\n    tag_31:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1259:1374  function getProsumerTariff(uint Pexp) public returns (uint Tp){... */\n    tag_34:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1313:1320  uint Tp */\n      0x0\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1343:1346  btp */\n      sload(0x3)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1336:1340  Pexp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1336:1346  Pexp * btp */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1331:1346  Tp = Pexp * btp */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1364:1366  Tp */\n      dup1\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1356:1367  return (Tp) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1259:1374  function getProsumerTariff(uint Pexp) public returns (uint Tp){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1380:2370  function getConsumerTariff(uint Cimp) public returns (uint Tc){... */\n    tag_37:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1434:1441  uint Tc */\n      0x0\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1471:1474  251 */\n      0xfb\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1464:1468  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1464:1474  Cimp < 251 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1461:2343  if(Cimp < 251){... */\n      iszero\n      tag_62\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1499:1501  51 */\n      0x33\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1492:1496  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1492:1501  Cimp < 51 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1489:2098  if(Cimp < 51){... */\n      iszero\n      tag_63\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1532:1536  btc1 */\n      sload(0x4)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1525:1529  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1525:1536  Cimp * btc1 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1520:1536  Tc = Cimp * btc1 */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1489:2098  if(Cimp < 51){... */\n      jump(tag_64)\n    tag_63:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1579:1581  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1572:1576  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1572:1581  Cimp > 50 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1572:1595  Cimp > 50 && Cimp < 101 */\n      dup1\n      iszero\n      tag_65\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1592:1595  101 */\n      0x65\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1585:1589  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1585:1595  Cimp < 101 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1572:1595  Cimp > 50 && Cimp < 101 */\n    tag_65:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1569:2098  if(Cimp > 50 && Cimp < 101){... */\n      iszero\n      tag_66\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1646:1650  btc2 */\n      sload(0x5)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1640:1642  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1635:1639  Cimp */\n      dup4\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1635:1642  Cimp-50 */\n      sub\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1634:1650  (Cimp-50) * btc2 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1625:1629  btc1 */\n      sload(0x4)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1620:1622  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1620:1629  50 * btc1 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1619:1651  (50 * btc1) + ((Cimp-50) * btc2) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1614:1651  Tc = (50 * btc1) + ((Cimp-50) * btc2) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1569:2098  if(Cimp > 50 && Cimp < 101){... */\n      jump(tag_67)\n    tag_66:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1694:1697  100 */\n      0x64\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1687:1691  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1687:1697  Cimp > 100 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1687:1711  Cimp > 100 && Cimp < 151 */\n      dup1\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1708:1711  151 */\n      0x97\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1701:1705  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1701:1711  Cimp < 151 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1687:1711  Cimp > 100 && Cimp < 151 */\n    tag_68:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1684:2098  if(Cimp > 100 && Cimp < 151){... */\n      iszero\n      tag_69\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1776:1780  btc3 */\n      sload(0x6)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1770:1772  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1765:1769  Cimp */\n      dup4\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1765:1772  Cimp-50 */\n      sub\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1764:1780  (Cimp-50) * btc3 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1755:1759  btc2 */\n      sload(0x5)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1750:1752  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1750:1759  50 * btc2 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1741:1745  btc1 */\n      sload(0x4)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1736:1738  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1736:1745  50 * btc1 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1735:1760  (50 * btc1) + (50 * btc2) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1735:1781  (50 * btc1) + (50 * btc2) + ((Cimp-50) * btc3) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1730:1781  Tc = (50 * btc1) + (50 * btc2) + ((Cimp-50) * btc3) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1684:2098  if(Cimp > 100 && Cimp < 151){... */\n      jump(tag_70)\n    tag_69:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1824:1827  150 */\n      0x96\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1817:1821  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1817:1827  Cimp > 150 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1817:1841  Cimp > 150 && Cimp < 201 */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1838:1841  201 */\n      0xc9\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1831:1835  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1831:1841  Cimp < 201 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1817:1841  Cimp > 150 && Cimp < 201 */\n    tag_71:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1814:2098  if(Cimp > 150 && Cimp < 201){... */\n      iszero\n      tag_72\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1920:1924  btc4 */\n      sload(0x7)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1914:1916  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1909:1913  Cimp */\n      dup4\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1909:1916  Cimp-50 */\n      sub\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1908:1924  (Cimp-50) * btc4 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1899:1903  btc3 */\n      sload(0x6)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1894:1896  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1894:1903  50 * btc3 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1885:1889  btc2 */\n      sload(0x5)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1880:1882  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1880:1889  50 * btc2 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1871:1875  btc1 */\n      sload(0x4)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1866:1868  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1866:1875  50 * btc1 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1865:1890  (50 * btc1) + (50 * btc2) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1865:1904  (50 * btc1) + (50 * btc2) + (50 * btc3) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1865:1925  (50 * btc1) + (50 * btc2) + (50 * btc3) + ((Cimp-50) * btc4) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1860:1925  Tc = (50 * btc1) + (50 * btc2) + (50 * btc3) + ((Cimp-50) * btc4) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1814:2098  if(Cimp > 150 && Cimp < 201){... */\n      jump(tag_73)\n    tag_72:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1968:1971  200 */\n      0xc8\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1961:1965  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1961:1971  Cimp > 200 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1961:1985  Cimp > 200 && Cimp < 251 */\n      dup1\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1982:1985  251 */\n      0xfb\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1975:1979  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1975:1985  Cimp < 251 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1961:1985  Cimp > 200 && Cimp < 251 */\n    tag_74:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1958:2098  if(Cimp > 200 && Cimp < 251){... */\n      iszero\n      tag_75\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2078:2082  btc5 */\n      sload(0x8)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2072:2074  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2067:2071  Cimp */\n      dup4\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2067:2074  Cimp-50 */\n      sub\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2066:2082  (Cimp-50) * btc5 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2057:2061  btc4 */\n      sload(0x7)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2052:2054  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2052:2061  50 * btc4 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2043:2047  btc3 */\n      sload(0x6)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2038:2040  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2038:2047  50 * btc3 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2029:2033  btc2 */\n      sload(0x5)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2024:2026  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2024:2033  50 * btc2 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2015:2019  btc1 */\n      sload(0x4)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2010:2012  50 */\n      0x32\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2010:2019  50 * btc1 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2009:2034  (50 * btc1) + (50 * btc2) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2009:2048  (50 * btc1) + (50 * btc2) + (50 * btc3) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2009:2062  (50 * btc1) + (50 * btc2) + (50 * btc3) + (50 * btc4) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2009:2083  (50 * btc1) + (50 * btc2) + (50 * btc3) + (50 * btc4) + ((Cimp-50) * btc5) */\n      add\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2004:2083  Tc = (50 * btc1) + (50 * btc2) + (50 * btc3) + (50 * btc4) + ((Cimp-50) * btc5) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1958:2098  if(Cimp > 200 && Cimp < 251){... */\n    tag_75:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1814:2098  if(Cimp > 150 && Cimp < 201){... */\n    tag_73:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1684:2098  if(Cimp > 100 && Cimp < 151){... */\n    tag_70:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1569:2098  if(Cimp > 50 && Cimp < 101){... */\n    tag_67:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1489:2098  if(Cimp < 51){... */\n    tag_64:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1461:2343  if(Cimp < 251){... */\n      jump(tag_76)\n    tag_62:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2132:2135  250 */\n      0xfa\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2125:2129  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2125:2135  Cimp > 250 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2125:2149  Cimp > 250 && Cimp < 351 */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2146:2149  351 */\n      0x15f\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2139:2143  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2139:2149  Cimp < 351 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2125:2149  Cimp > 250 && Cimp < 351 */\n    tag_77:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2122:2343  if(Cimp > 250 && Cimp < 351){... */\n      iszero\n      tag_78\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2176:2180  btc6 */\n      sload(0x9)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2169:2173  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2169:2180  Cimp * btc6 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2164:2180  Tc = Cimp * btc6 */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2122:2343  if(Cimp > 250 && Cimp < 351){... */\n      jump(tag_79)\n    tag_78:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2215:2218  350 */\n      0x15e\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2208:2212  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2208:2218  Cimp > 350 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2208:2232  Cimp > 350 && Cimp < 451 */\n      dup1\n      iszero\n      tag_80\n      jumpi\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2229:2232  451 */\n      0x1c3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2222:2226  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2222:2232  Cimp < 451 */\n      lt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2208:2232  Cimp > 350 && Cimp < 451 */\n    tag_80:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2205:2343  if(Cimp > 350 && Cimp < 451){... */\n      iszero\n      tag_81\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2259:2263  btc7 */\n      sload(0xa)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2252:2256  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2252:2263  Cimp * btc7 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2247:2263  Tc = Cimp * btc7 */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2205:2343  if(Cimp > 350 && Cimp < 451){... */\n      jump(tag_82)\n    tag_81:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2298:2301  450 */\n      0x1c2\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2291:2295  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2291:2301  Cimp > 450 */\n      gt\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2288:2343  if(Cimp > 450){... */\n      iszero\n      tag_83\n      jumpi\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2328:2332  btc8 */\n      sload(0xb)\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2321:2325  Cimp */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2321:2332  Cimp * btc8 */\n      mul\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2316:2332  Tc = Cimp * btc8 */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2288:2343  if(Cimp > 450){... */\n    tag_83:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2205:2343  if(Cimp > 350 && Cimp < 451){... */\n    tag_82:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2122:2343  if(Cimp > 250 && Cimp < 351){... */\n    tag_79:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1461:2343  if(Cimp < 251){... */\n    tag_76:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2360:2362  Tc */\n      dup1\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2352:2363  return (Tc) */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1380:2370  function getConsumerTariff(uint Cimp) public returns (uint Tc){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2572:2640  function balCheck() public payable {... */\n    tag_39:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2624:2633  msg.value */\n      callvalue\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2613:2620  balance */\n      0x2\n      0x0\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2613:2633  balance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2572:2640  function balCheck() public payable {... */\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":895:916  uint public btc8 = 10 */\n    tag_42:\n      sload(0xb)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":843:863  uint public btc6 = 8 */\n    tag_45:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":556:579  uint public balance = 0 */\n    tag_48:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":713:733  uint public btc1 = 3 */\n    tag_51:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2376:2566  function send(address _receiver, uint amount) payable public {... */\n    tag_53:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2517:2523  amount */\n      dup1\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2504:2513  msg.value */\n      callvalue\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2504:2523  msg.value >= amount */\n      lt\n      iszero\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2496:2524  require(msg.value >= amount) */\n      iszero\n      iszero\n      tag_86\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_86:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2530:2539  _receiver */\n      dup2\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2530:2548  _receiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2530:2559  _receiver.transfer(msg.value) */\n      0x8fc\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2549:2558  msg.value */\n      callvalue\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2530:2559  _receiver.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2530:2559  _receiver.transfer(msg.value) */\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":2376:2566  function send(address _receiver, uint amount) payable public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":869:889  uint public btc7 = 9 */\n    tag_56:\n      sload(0xa)\n      dup2\n      jump\t// out\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":930:1253  function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public... */\n    tag_59:\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1006:1013  uint nP */\n      0x0\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1014:1021  uint nC */\n      dup1\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1022:1030  uint nEV */\n      0x0\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1055:1060  nPget */\n      dup6\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1050:1060  nP = nPget */\n      swap3\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1075:1080  nCget */\n      dup5\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1070:1080  nC = nCget */\n      swap2\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1096:1102  nEVget */\n      dup4\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1090:1102  nEV = nEVget */\n      swap1\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1236:1238  nP */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1239:1241  nC */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1242:1245  nEV */\n      dup3\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":1228:1246  return (nP,nC,nEV) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"eth based/truffle/contracts/FLIR_Contract.sol\":930:1253  function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820f617ce8935432c8dca3f43f855c4f07d32c0979a3a0ce875e5f26caa43f339b90029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600255600380556003600455600460055560056006556006600755600760085560086009556009600a55600a600b5534801561004157600080fd5b5061061f806100516000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c03a1a3146100e0578063103347e71461010b57806320e731a11461013657806328780a44146101615780632c9af64c1461018c5780635c8f6b56146101b7578063721028ec146101f85780637c134b1414610239578063a8bdb68b14610243578063b4ad7fa91461026e578063b69ef8a814610299578063c2c496ec146102c4578063d0679d34146102ef578063ed2fa5ab1461032f578063f02e48c31461035a575b600080fd5b3480156100ec57600080fd5b506100f56103bd565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b506101206103c3565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b6103c9565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101766103cf565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16103d5565b6040518082815260200191505060405180910390f35b3480156101c357600080fd5b506101e2600480360381019080803590602001909291905050506103db565b6040518082815260200191505060405180910390f35b34801561020457600080fd5b50610223600480360381019080803590602001909291905050506103ec565b6040518082815260200191505060405180910390f35b610241610549565b005b34801561024f57600080fd5b5061025861055b565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b50610283610561565b6040518082815260200191505060405180910390f35b3480156102a557600080fd5b506102ae610567565b6040518082815260200191505060405180910390f35b3480156102d057600080fd5b506102d961056d565b6040518082815260200191505060405180910390f35b61032d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610573565b005b34801561033b57600080fd5b506103446105cd565b6040518082815260200191505060405180910390f35b34801561036657600080fd5b506103996004803603810190808035906020019092919080359060200190929190803590602001909291905050506105d3565b60405180848152602001838152602001828152602001935050505060405180910390f35b60085481565b60075481565b60065481565b60055481565b60035481565b600060035482029050809050919050565b600060fb8210156104e757603382101561040c57600454820290506104e2565b60328211801561041c5750606582105b156104375760055460328303026004546032020190506104e1565b6064821180156104475750609782105b15610469576006546032830302600554603202600454603202010190506104e0565b609682118015610479575060c982105b156104a257600754603283030260065460320260055460320260045460320201010190506104df565b60c8821180156104b2575060fb82105b156104de5760085460328303026007546032026006546032026005546032026004546032020101010190505b5b5b5b5b610541565b60fa821180156104f8575061015f82105b156105095760095482029050610540565b61015e8211801561051b57506101c382105b1561052c57600a548202905061053f565b6101c282111561053e57600b54820290505b5b5b5b809050919050565b34600260008282540192505081905550565b600b5481565b60095481565b60025481565b60045481565b80341015151561058257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156105c8573d6000803e3d6000fd5b505050565b600a5481565b6000806000859250849150839050828282925092509250935093509390505600a165627a7a72305820f617ce8935432c8dca3f43f855c4f07d32c0979a3a0ce875e5f26caa43f339b90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SSTORE PUSH1 0x3 PUSH1 0x4 SSTORE PUSH1 0x4 PUSH1 0x5 SSTORE PUSH1 0x5 PUSH1 0x6 SSTORE PUSH1 0x6 PUSH1 0x7 SSTORE PUSH1 0x7 PUSH1 0x8 SSTORE PUSH1 0x8 PUSH1 0x9 SSTORE PUSH1 0x9 PUSH1 0xA SSTORE PUSH1 0xA PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61F DUP1 PUSH2 0x51 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xC03A1A3 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x103347E7 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20E731A1 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x28780A44 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2C9AF64C EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x5C8F6B56 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x721028EC EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7C134B14 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA8BDB68B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xB4AD7FA9 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC2C496EC EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xED2FA5AB EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xF02E48C3 EQ PUSH2 0x35A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 MUL SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB DUP3 LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x33 DUP3 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x4 SLOAD DUP3 MUL SWAP1 POP PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x32 DUP3 GT DUP1 ISZERO PUSH2 0x41C JUMPI POP PUSH1 0x65 DUP3 LT JUMPDEST ISZERO PUSH2 0x437 JUMPI PUSH1 0x5 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD SWAP1 POP PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x64 DUP3 GT DUP1 ISZERO PUSH2 0x447 JUMPI POP PUSH1 0x97 DUP3 LT JUMPDEST ISZERO PUSH2 0x469 JUMPI PUSH1 0x6 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x96 DUP3 GT DUP1 ISZERO PUSH2 0x479 JUMPI POP PUSH1 0xC9 DUP3 LT JUMPDEST ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x7 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x6 SLOAD PUSH1 0x32 MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD ADD SWAP1 POP PUSH2 0x4DF JUMP JUMPDEST PUSH1 0xC8 DUP3 GT DUP1 ISZERO PUSH2 0x4B2 JUMPI POP PUSH1 0xFB DUP3 LT JUMPDEST ISZERO PUSH2 0x4DE JUMPI PUSH1 0x8 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x7 SLOAD PUSH1 0x32 MUL PUSH1 0x6 SLOAD PUSH1 0x32 MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD ADD ADD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0xFA DUP3 GT DUP1 ISZERO PUSH2 0x4F8 JUMPI POP PUSH2 0x15F DUP3 LT JUMPDEST ISZERO PUSH2 0x509 JUMPI PUSH1 0x9 SLOAD DUP3 MUL SWAP1 POP PUSH2 0x540 JUMP JUMPDEST PUSH2 0x15E DUP3 GT DUP1 ISZERO PUSH2 0x51B JUMPI POP PUSH2 0x1C3 DUP3 LT JUMPDEST ISZERO PUSH2 0x52C JUMPI PUSH1 0xA SLOAD DUP3 MUL SWAP1 POP PUSH2 0x53F JUMP JUMPDEST PUSH2 0x1C2 DUP3 GT ISZERO PUSH2 0x53E JUMPI PUSH1 0xB SLOAD DUP3 MUL SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SWAP3 POP DUP5 SWAP2 POP DUP4 SWAP1 POP DUP3 DUP3 DUP3 SWAP3 POP SWAP3 POP SWAP3 POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf6 OR 0xce DUP10 CALLDATALOAD NUMBER 0x2c DUP14 0xca 0x3f NUMBER 0xf8 SSTORE 0xc4 CREATE PUSH30 0x32C0979A3A0CE875E5F26CAA43F339B90029000000000000000000000000 ",
							"sourceMap": "129:3436:0:-;;;578:1;556:23;;705:1;687:19;;732:1;713:20;;758:1;739:20;;784:1;765:20;;810:1;791:20;;836:1;817:20;;862:1;843:20;;888:1;869:20;;914:2;895:21;;129:3436;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:3436:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c03a1a3146100e0578063103347e71461010b57806320e731a11461013657806328780a44146101615780632c9af64c1461018c5780635c8f6b56146101b7578063721028ec146101f85780637c134b1414610239578063a8bdb68b14610243578063b4ad7fa91461026e578063b69ef8a814610299578063c2c496ec146102c4578063d0679d34146102ef578063ed2fa5ab1461032f578063f02e48c31461035a575b600080fd5b3480156100ec57600080fd5b506100f56103bd565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b506101206103c3565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b6103c9565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101766103cf565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16103d5565b6040518082815260200191505060405180910390f35b3480156101c357600080fd5b506101e2600480360381019080803590602001909291905050506103db565b6040518082815260200191505060405180910390f35b34801561020457600080fd5b50610223600480360381019080803590602001909291905050506103ec565b6040518082815260200191505060405180910390f35b610241610549565b005b34801561024f57600080fd5b5061025861055b565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b50610283610561565b6040518082815260200191505060405180910390f35b3480156102a557600080fd5b506102ae610567565b6040518082815260200191505060405180910390f35b3480156102d057600080fd5b506102d961056d565b6040518082815260200191505060405180910390f35b61032d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610573565b005b34801561033b57600080fd5b506103446105cd565b6040518082815260200191505060405180910390f35b34801561036657600080fd5b506103996004803603810190808035906020019092919080359060200190929190803590602001909291905050506105d3565b60405180848152602001838152602001828152602001935050505060405180910390f35b60085481565b60075481565b60065481565b60055481565b60035481565b600060035482029050809050919050565b600060fb8210156104e757603382101561040c57600454820290506104e2565b60328211801561041c5750606582105b156104375760055460328303026004546032020190506104e1565b6064821180156104475750609782105b15610469576006546032830302600554603202600454603202010190506104e0565b609682118015610479575060c982105b156104a257600754603283030260065460320260055460320260045460320201010190506104df565b60c8821180156104b2575060fb82105b156104de5760085460328303026007546032026006546032026005546032026004546032020101010190505b5b5b5b5b610541565b60fa821180156104f8575061015f82105b156105095760095482029050610540565b61015e8211801561051b57506101c382105b1561052c57600a548202905061053f565b6101c282111561053e57600b54820290505b5b5b5b809050919050565b34600260008282540192505081905550565b600b5481565b60095481565b60025481565b60045481565b80341015151561058257600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156105c8573d6000803e3d6000fd5b505050565b600a5481565b6000806000859250849150839050828282925092509250935093509390505600a165627a7a72305820f617ce8935432c8dca3f43f855c4f07d32c0979a3a0ce875e5f26caa43f339b90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xC03A1A3 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x103347E7 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20E731A1 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x28780A44 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2C9AF64C EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x5C8F6B56 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x721028EC EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7C134B14 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA8BDB68B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xB4AD7FA9 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC2C496EC EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xED2FA5AB EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xF02E48C3 EQ PUSH2 0x35A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 MUL SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB DUP3 LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x33 DUP3 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x4 SLOAD DUP3 MUL SWAP1 POP PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x32 DUP3 GT DUP1 ISZERO PUSH2 0x41C JUMPI POP PUSH1 0x65 DUP3 LT JUMPDEST ISZERO PUSH2 0x437 JUMPI PUSH1 0x5 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD SWAP1 POP PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x64 DUP3 GT DUP1 ISZERO PUSH2 0x447 JUMPI POP PUSH1 0x97 DUP3 LT JUMPDEST ISZERO PUSH2 0x469 JUMPI PUSH1 0x6 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x96 DUP3 GT DUP1 ISZERO PUSH2 0x479 JUMPI POP PUSH1 0xC9 DUP3 LT JUMPDEST ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x7 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x6 SLOAD PUSH1 0x32 MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD ADD SWAP1 POP PUSH2 0x4DF JUMP JUMPDEST PUSH1 0xC8 DUP3 GT DUP1 ISZERO PUSH2 0x4B2 JUMPI POP PUSH1 0xFB DUP3 LT JUMPDEST ISZERO PUSH2 0x4DE JUMPI PUSH1 0x8 SLOAD PUSH1 0x32 DUP4 SUB MUL PUSH1 0x7 SLOAD PUSH1 0x32 MUL PUSH1 0x6 SLOAD PUSH1 0x32 MUL PUSH1 0x5 SLOAD PUSH1 0x32 MUL PUSH1 0x4 SLOAD PUSH1 0x32 MUL ADD ADD ADD ADD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH1 0xFA DUP3 GT DUP1 ISZERO PUSH2 0x4F8 JUMPI POP PUSH2 0x15F DUP3 LT JUMPDEST ISZERO PUSH2 0x509 JUMPI PUSH1 0x9 SLOAD DUP3 MUL SWAP1 POP PUSH2 0x540 JUMP JUMPDEST PUSH2 0x15E DUP3 GT DUP1 ISZERO PUSH2 0x51B JUMPI POP PUSH2 0x1C3 DUP3 LT JUMPDEST ISZERO PUSH2 0x52C JUMPI PUSH1 0xA SLOAD DUP3 MUL SWAP1 POP PUSH2 0x53F JUMP JUMPDEST PUSH2 0x1C2 DUP3 GT ISZERO PUSH2 0x53E JUMPI PUSH1 0xB SLOAD DUP3 MUL SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SWAP3 POP DUP5 SWAP2 POP DUP4 SWAP1 POP DUP3 DUP3 DUP3 SWAP3 POP SWAP3 POP SWAP3 POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf6 OR 0xce DUP10 CALLDATALOAD NUMBER 0x2c DUP14 0xca 0x3f NUMBER 0xf8 SSTORE 0xc4 CREATE PUSH30 0x32C0979A3A0CE875E5F26CAA43F339B90029000000000000000000000000 ",
							"sourceMap": "129:3436:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;817:20:0;;;;;;;;;;;;;;;;;;;;;;;791;;8:9:-1;5:2;;;30:1;27;20:12;5:2;791:20:0;;;;;;;;;;;;;;;;;;;;;;;765;;8:9:-1;5:2;;;30:1;27;20:12;5:2;765:20:0;;;;;;;;;;;;;;;;;;;;;;;739;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:20:0;;;;;;;;;;;;;;;;;;;;;;;687:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:19:0;;;;;;;;;;;;;;;;;;;;;;;1259:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:990;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1380:990:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2572:68;;;;;;895:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:21:0;;;;;;;;;;;;;;;;;;;;;;;843:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;843:20:0;;;;;;;;;;;;;;;;;;;;;;;556:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:23:0;;;;;;;;;;;;;;;;;;;;;;;713:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;713:20:0;;;;;;;;;;;;;;;;;;;;;;;2376:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:20:0;;;;;;;;;;;;;;;;;;;;;;;930:323;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:323:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:20;;;;:::o;791:::-;;;;:::o;765:::-;;;;:::o;739:::-;;;;:::o;687:19::-;;;;:::o;1259:115::-;1313:7;1343:3;;1336:4;:10;1331:15;;1364:2;1356:11;;1259:115;;;:::o;1380:990::-;1434:7;1471:3;1464:4;:10;1461:882;;;1499:2;1492:4;:9;1489:609;;;1532:4;;1525;:11;1520:16;;1489:609;;;1579:2;1572:4;:9;:23;;;;;1592:3;1585:4;:10;1572:23;1569:529;;;1646:4;;1640:2;1635:4;:7;1634:16;1625:4;;1620:2;:9;1619:32;1614:37;;1569:529;;;1694:3;1687:4;:10;:24;;;;;1708:3;1701:4;:10;1687:24;1684:414;;;1776:4;;1770:2;1765:4;:7;1764:16;1755:4;;1750:2;:9;1741:4;;1736:2;:9;1735:25;:46;1730:51;;1684:414;;;1824:3;1817:4;:10;:24;;;;;1838:3;1831:4;:10;1817:24;1814:284;;;1920:4;;1914:2;1909:4;:7;1908:16;1899:4;;1894:2;:9;1885:4;;1880:2;:9;1871:4;;1866:2;:9;1865:25;:39;:60;1860:65;;1814:284;;;1968:3;1961:4;:10;:24;;;;;1982:3;1975:4;:10;1961:24;1958:140;;;2078:4;;2072:2;2067:4;:7;2066:16;2057:4;;2052:2;:9;2043:4;;2038:2;:9;2029:4;;2024:2;:9;2015:4;;2010:2;:9;2009:25;:39;:53;:74;2004:79;;1958:140;1814:284;1684:414;1569:529;1489:609;1461:882;;;2132:3;2125:4;:10;:24;;;;;2146:3;2139:4;:10;2125:24;2122:221;;;2176:4;;2169;:11;2164:16;;2122:221;;;2215:3;2208:4;:10;:24;;;;;2229:3;2222:4;:10;2208:24;2205:138;;;2259:4;;2252;:11;2247:16;;2205:138;;;2298:3;2291:4;:10;2288:55;;;2328:4;;2321;:11;2316:16;;2288:55;2205:138;2122:221;1461:882;2360:2;2352:11;;1380:990;;;:::o;2572:68::-;2624:9;2613:7;;:20;;;;;;;;;;;2572:68::o;895:21::-;;;;:::o;843:20::-;;;;:::o;556:23::-;;;;:::o;713:20::-;;;;:::o;2376:190::-;2517:6;2504:9;:19;;2496:28;;;;;;;;2530:9;:18;;:29;2549:9;2530:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2530:29:0;2376:190;;:::o;869:20::-;;;;:::o;930:323::-;1006:7;1014;1022:8;1055:5;1050:10;;1075:5;1070:10;;1096:6;1090:12;;1236:2;1239;1242:3;1228:18;;;;;;930:323;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "313400",
								"executionCost": "185409",
								"totalCost": "498809"
							},
							"external": {
								"balCheck()": "20495",
								"balance()": "614",
								"btc1()": "636",
								"btc2()": "460",
								"btc3()": "438",
								"btc4()": "416",
								"btc5()": "394",
								"btc6()": "592",
								"btc7()": "680",
								"btc8()": "570",
								"btp()": "482",
								"getConsumerTariff(uint256)": "1768",
								"getProsumerTariff(uint256)": "589",
								"getnPnCnEV(uint256,uint256,uint256)": "721",
								"send(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "MSTORE"
								},
								{
									"begin": 578,
									"end": 579,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 556,
									"end": 579,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 556,
									"end": 579,
									"name": "SSTORE"
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 687,
									"end": 706,
									"name": "DUP1"
								},
								{
									"begin": 687,
									"end": 706,
									"name": "SSTORE"
								},
								{
									"begin": 732,
									"end": 733,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 713,
									"end": 733,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 713,
									"end": 733,
									"name": "SSTORE"
								},
								{
									"begin": 758,
									"end": 759,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 739,
									"end": 759,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 739,
									"end": 759,
									"name": "SSTORE"
								},
								{
									"begin": 784,
									"end": 785,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 765,
									"end": 785,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 765,
									"end": 785,
									"name": "SSTORE"
								},
								{
									"begin": 810,
									"end": 811,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 791,
									"end": 811,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 791,
									"end": 811,
									"name": "SSTORE"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 817,
									"end": 837,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 817,
									"end": 837,
									"name": "SSTORE"
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 843,
									"end": 863,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 843,
									"end": 863,
									"name": "SSTORE"
								},
								{
									"begin": 888,
									"end": 889,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 869,
									"end": 889,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 869,
									"end": 889,
									"name": "SSTORE"
								},
								{
									"begin": 914,
									"end": 916,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 895,
									"end": 916,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 895,
									"end": 916,
									"name": "SSTORE"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "CODECOPY"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 3565,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820f617ce8935432c8dca3f43f855c4f07d32c0979a3a0ce875e5f26caa43f339b90029",
									".code": [
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "LT"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "SWAP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DIV"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "AND"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "C03A1A3"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "103347E7"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "20E731A1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "28780A44"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "2C9AF64C"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "5C8F6B56"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "721028EC"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "7C134B14"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "A8BDB68B"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "B4AD7FA9"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "B69EF8A8"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "C2C496EC"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "D0679D34"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "ED2FA5AB"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "F02E48C3"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 3565,
											"name": "REVERT"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "JUMP"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP3"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "SUB"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "RETURN"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "POP"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "JUMP"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "MLOAD"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "DUP1"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "DUP3"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "DUP2"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "MSTORE"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "ADD"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "SWAP2"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "POP"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "POP"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "MLOAD"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "DUP1"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "SWAP2"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "SUB"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "RETURN"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "JUMP"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "DUP3"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "SUB"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "RETURN"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMP"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP3"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "RETURN"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "POP"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "JUMP"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "MLOAD"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "DUP1"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "DUP3"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "MSTORE"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "ADD"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SWAP2"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "POP"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "POP"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "MLOAD"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "DUP1"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SWAP2"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SUB"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SWAP1"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "RETURN"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SUB"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP3"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "JUMP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "MLOAD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP3"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "MSTORE"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "MLOAD"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "DUP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SUB"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "RETURN"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SUB"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "ADD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "ADD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP3"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "JUMP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "MLOAD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP3"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "MSTORE"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "ADD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "MLOAD"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SUB"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "RETURN"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "JUMP"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "STOP"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMP"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MLOAD"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MSTORE"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "ADD"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MLOAD"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP1"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP2"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SUB"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "RETURN"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "JUMPDEST"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "POP"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "JUMP"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "JUMPDEST"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "MLOAD"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP1"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP3"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP2"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "MSTORE"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "ADD"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SWAP2"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "POP"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "POP"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "MLOAD"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP1"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SWAP2"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SUB"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SWAP1"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "RETURN"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMP"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MLOAD"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP1"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP3"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP2"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MSTORE"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "ADD"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP2"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MLOAD"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP1"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP2"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SUB"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP1"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "RETURN"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "JUMP"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "MLOAD"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP3"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SWAP2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "MLOAD"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SWAP2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SUB"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "RETURN"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "JUMPDEST"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "DUP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SUB"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "DUP2"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "ADD"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "DUP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "DUP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "AND"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "ADD"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP3"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP2"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "DUP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "ADD"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP3"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP2"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "JUMP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "JUMPDEST"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "STOP"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "JUMP"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "MLOAD"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP3"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "MSTORE"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "ADD"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "SWAP2"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "MLOAD"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "SWAP2"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "SUB"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "RETURN"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "JUMPDEST"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SUB"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP3"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP3"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP3"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "JUMP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "JUMPDEST"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "MLOAD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP5"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "MSTORE"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "MSTORE"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP3"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "MSTORE"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "ADD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "MLOAD"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP2"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SUB"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "RETURN"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 837,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "SLOAD"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "DUP2"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "SLOAD"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "SLOAD"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SLOAD"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1346,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1343,
											"end": 1346,
											"name": "SLOAD"
										},
										{
											"begin": 1336,
											"end": 1340,
											"name": "DUP3"
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "MUL"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "DUP1"
										},
										{
											"begin": 1356,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1356,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP2"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1374,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "PUSH",
											"value": "FB"
										},
										{
											"begin": 1464,
											"end": 1468,
											"name": "DUP3"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "LT"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "ISZERO"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "JUMPI"
										},
										{
											"begin": 1499,
											"end": 1501,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP3"
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "LT"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "ISZERO"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "SLOAD"
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "DUP3"
										},
										{
											"begin": 1525,
											"end": 1536,
											"name": "MUL"
										},
										{
											"begin": 1520,
											"end": 1536,
											"name": "SWAP1"
										},
										{
											"begin": 1520,
											"end": 1536,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "JUMP"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1572,
											"end": 1576,
											"name": "DUP3"
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "GT"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "DUP1"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "ISZERO"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 1592,
											"end": 1595,
											"name": "PUSH",
											"value": "65"
										},
										{
											"begin": 1585,
											"end": 1589,
											"name": "DUP3"
										},
										{
											"begin": 1585,
											"end": 1595,
											"name": "LT"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "ISZERO"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 1646,
											"end": 1650,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1646,
											"end": 1650,
											"name": "SLOAD"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "DUP4"
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "MUL"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "SLOAD"
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "MUL"
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "ADD"
										},
										{
											"begin": 1614,
											"end": 1651,
											"name": "SWAP1"
										},
										{
											"begin": 1614,
											"end": 1651,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "JUMP"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "DUP3"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "GT"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "ISZERO"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 1711,
											"name": "PUSH",
											"value": "97"
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "DUP3"
										},
										{
											"begin": 1701,
											"end": 1711,
											"name": "LT"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1687,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "ISZERO"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 1776,
											"end": 1780,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1776,
											"end": 1780,
											"name": "SLOAD"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1765,
											"end": 1769,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "SUB"
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "MUL"
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "SLOAD"
										},
										{
											"begin": 1750,
											"end": 1752,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "MUL"
										},
										{
											"begin": 1741,
											"end": 1745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1745,
											"name": "SLOAD"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "MUL"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1781,
											"name": "ADD"
										},
										{
											"begin": 1730,
											"end": 1781,
											"name": "SWAP1"
										},
										{
											"begin": 1730,
											"end": 1781,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "JUMP"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "PUSH",
											"value": "96"
										},
										{
											"begin": 1817,
											"end": 1821,
											"name": "DUP3"
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "GT"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "DUP1"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "ISZERO"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "JUMPI"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "POP"
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "PUSH",
											"value": "C9"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "DUP3"
										},
										{
											"begin": 1831,
											"end": 1841,
											"name": "LT"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "JUMPDEST"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 1920,
											"end": 1924,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1920,
											"end": 1924,
											"name": "SLOAD"
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "DUP4"
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "SUB"
										},
										{
											"begin": 1908,
											"end": 1924,
											"name": "MUL"
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "SLOAD"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "MUL"
										},
										{
											"begin": 1885,
											"end": 1889,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1885,
											"end": 1889,
											"name": "SLOAD"
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "MUL"
										},
										{
											"begin": 1871,
											"end": 1875,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1875,
											"name": "SLOAD"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1866,
											"end": 1875,
											"name": "MUL"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1904,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1925,
											"name": "ADD"
										},
										{
											"begin": 1860,
											"end": 1925,
											"name": "SWAP1"
										},
										{
											"begin": 1860,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "JUMP"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "DUP3"
										},
										{
											"begin": 1961,
											"end": 1971,
											"name": "GT"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "DUP1"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "ISZERO"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPI"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "POP"
										},
										{
											"begin": 1982,
											"end": 1985,
											"name": "PUSH",
											"value": "FB"
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "DUP3"
										},
										{
											"begin": 1975,
											"end": 1985,
											"name": "LT"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST"
										},
										{
											"begin": 1958,
											"end": 2098,
											"name": "ISZERO"
										},
										{
											"begin": 1958,
											"end": 2098,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1958,
											"end": 2098,
											"name": "JUMPI"
										},
										{
											"begin": 2078,
											"end": 2082,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2078,
											"end": 2082,
											"name": "SLOAD"
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "DUP4"
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "SUB"
										},
										{
											"begin": 2066,
											"end": 2082,
											"name": "MUL"
										},
										{
											"begin": 2057,
											"end": 2061,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2057,
											"end": 2061,
											"name": "SLOAD"
										},
										{
											"begin": 2052,
											"end": 2054,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "MUL"
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "SLOAD"
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "MUL"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SLOAD"
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "MUL"
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "SLOAD"
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2010,
											"end": 2019,
											"name": "MUL"
										},
										{
											"begin": 2009,
											"end": 2034,
											"name": "ADD"
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "ADD"
										},
										{
											"begin": 2009,
											"end": 2062,
											"name": "ADD"
										},
										{
											"begin": 2009,
											"end": 2083,
											"name": "ADD"
										},
										{
											"begin": 2004,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 2004,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1958,
											"end": 2098,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1958,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1814,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1569,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1489,
											"end": 2098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "JUMP"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2132,
											"end": 2135,
											"name": "PUSH",
											"value": "FA"
										},
										{
											"begin": 2125,
											"end": 2129,
											"name": "DUP3"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "GT"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "DUP1"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "ISZERO"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPI"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "POP"
										},
										{
											"begin": 2146,
											"end": 2149,
											"name": "PUSH",
											"value": "15F"
										},
										{
											"begin": 2139,
											"end": 2143,
											"name": "DUP3"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "LT"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "ISZERO"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "JUMPI"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "SLOAD"
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "DUP3"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL"
										},
										{
											"begin": 2164,
											"end": 2180,
											"name": "SWAP1"
										},
										{
											"begin": 2164,
											"end": 2180,
											"name": "POP"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "JUMP"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "PUSH",
											"value": "15E"
										},
										{
											"begin": 2208,
											"end": 2212,
											"name": "DUP3"
										},
										{
											"begin": 2208,
											"end": 2218,
											"name": "GT"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "DUP1"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "ISZERO"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "JUMPI"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2229,
											"end": 2232,
											"name": "PUSH",
											"value": "1C3"
										},
										{
											"begin": 2222,
											"end": 2226,
											"name": "DUP3"
										},
										{
											"begin": 2222,
											"end": 2232,
											"name": "LT"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2208,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "ISZERO"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "JUMPI"
										},
										{
											"begin": 2259,
											"end": 2263,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2259,
											"end": 2263,
											"name": "SLOAD"
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "DUP3"
										},
										{
											"begin": 2252,
											"end": 2263,
											"name": "MUL"
										},
										{
											"begin": 2247,
											"end": 2263,
											"name": "SWAP1"
										},
										{
											"begin": 2247,
											"end": 2263,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "JUMP"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "DUP3"
										},
										{
											"begin": 2291,
											"end": 2301,
											"name": "GT"
										},
										{
											"begin": 2288,
											"end": 2343,
											"name": "ISZERO"
										},
										{
											"begin": 2288,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2288,
											"end": 2343,
											"name": "JUMPI"
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "SLOAD"
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "DUP3"
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "MUL"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2343,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2288,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2205,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2122,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1461,
											"end": 2343,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP2"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "POP"
										},
										{
											"begin": 1380,
											"end": 2370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "CALLVALUE"
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "DUP3"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "DUP3"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SLOAD"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "ADD"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SWAP3"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "POP"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "POP"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "DUP2"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SWAP1"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SSTORE"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "POP"
										},
										{
											"begin": 2572,
											"end": 2640,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SLOAD"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "JUMPDEST"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SLOAD"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP2"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SLOAD"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP2"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "SLOAD"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 733,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "JUMPDEST"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP1"
										},
										{
											"begin": 2504,
											"end": 2513,
											"name": "CALLVALUE"
										},
										{
											"begin": 2504,
											"end": 2523,
											"name": "LT"
										},
										{
											"begin": 2504,
											"end": 2523,
											"name": "ISZERO"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "ISZERO"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "ISZERO"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "JUMPI"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "DUP1"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "REVERT"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "JUMPDEST"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2548,
											"name": "AND"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2549,
											"end": 2558,
											"name": "CALLVALUE"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ISZERO"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MUL"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP4"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SUB"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP6"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP9"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP9"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "CALL"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP4"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "POP"
										},
										{
											"begin": 2376,
											"end": 2566,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "SLOAD"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 869,
											"end": 889,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP6"
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "SWAP3"
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP5"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "POP"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DUP4"
										},
										{
											"begin": 1090,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1090,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "DUP3"
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "SWAP3"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "SWAP3"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "SWAP3"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP4"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1253,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balCheck()": "7c134b14",
							"balance()": "b69ef8a8",
							"btc1()": "c2c496ec",
							"btc2()": "28780a44",
							"btc3()": "20e731a1",
							"btc4()": "103347e7",
							"btc5()": "0c03a1a3",
							"btc6()": "b4ad7fa9",
							"btc7()": "ed2fa5ab",
							"btc8()": "a8bdb68b",
							"btp()": "2c9af64c",
							"getConsumerTariff(uint256)": "721028ec",
							"getProsumerTariff(uint256)": "5c8f6b56",
							"getnPnCnEV(uint256,uint256,uint256)": "f02e48c3",
							"send(address,uint256)": "d0679d34"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"btc5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Pexp\",\"type\":\"uint256\"}],\"name\":\"getProsumerTariff\",\"outputs\":[{\"name\":\"Tp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Cimp\",\"type\":\"uint256\"}],\"name\":\"getConsumerTariff\",\"outputs\":[{\"name\":\"Tc\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"balCheck\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btc7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nPget\",\"type\":\"uint256\"},{\"name\":\"nCget\",\"type\":\"uint256\"},{\"name\":\"nEVget\",\"type\":\"uint256\"}],\"name\":\"getnPnCnEV\",\"outputs\":[{\"name\":\"nP\",\"type\":\"uint256\"},{\"name\":\"nC\",\"type\":\"uint256\"},{\"name\":\"nEV\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"eth based/truffle/contracts/FLIR_Contract.sol\":\"FLIRContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"eth based/truffle/contracts/FLIR_Contract.sol\":{\"keccak256\":\"0x04fab18e813448eba805de54f333dea2cf0ea4aa36253028adf78994da244c11\",\"urls\":[\"bzzr://6fdad5c83d9c57ee8570cbf5a3b3212b7289db07ed676ab006bf88961e43be2f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "eth based/truffle/contracts/FLIR_Contract.sol:47:5: Warning: Function state mutability can be restricted to pure\n    function getnPnCnEV(uint nPget, uint nCget,uint nEVget) public\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1253,
					"file": "eth based/truffle/contracts/FLIR_Contract.sol",
					"start": 930
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "eth based/truffle/contracts/FLIR_Contract.sol:59:5: Warning: Function state mutability can be restricted to view\n    function getProsumerTariff(uint Pexp) public returns (uint Tp){\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1374,
					"file": "eth based/truffle/contracts/FLIR_Contract.sol",
					"start": 1259
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "eth based/truffle/contracts/FLIR_Contract.sol:64:5: Warning: Function state mutability can be restricted to view\n    function getConsumerTariff(uint Cimp) public returns (uint Tc){\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2370,
					"file": "eth based/truffle/contracts/FLIR_Contract.sol",
					"start": 1380
				},
				"type": "Warning"
			}
		],
		"sources": {
			"eth based/truffle/contracts/FLIR_Contract.sol": {
				"ast": {
					"absolutePath": "eth based/truffle/contracts/FLIR_Contract.sol",
					"exportedSymbols": {
						"FLIRContract": [
							320
						]
					},
					"id": 321,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "FLIRContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balaces",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "161:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "169:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "161:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "180:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 9,
									"name": "roles",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "210:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_role_$14_$",
										"typeString": "mapping(address => enum FLIRContract.role)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "218:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "210:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_role_$14_$",
											"typeString": "mapping(address => enum FLIRContract.role)"
										},
										"valueType": {
											"contractScope": null,
											"id": 7,
											"name": "role",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 14,
											"src": "229:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_role_$14",
												"typeString": "enum FLIRContract.role"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"canonicalName": "FLIRContract.role",
									"id": 14,
									"members": [
										{
											"id": 10,
											"name": "Prosumers",
											"nodeType": "EnumValue",
											"src": "486:9:0"
										},
										{
											"id": 11,
											"name": "Consumers",
											"nodeType": "EnumValue",
											"src": "505:9:0"
										},
										{
											"id": 12,
											"name": "Nanogrid",
											"nodeType": "EnumValue",
											"src": "524:8:0"
										},
										{
											"id": 13,
											"name": "EV",
											"nodeType": "EnumValue",
											"src": "542:2:0"
										}
									],
									"name": "role",
									"nodeType": "EnumDefinition",
									"src": "467:83:0"
								},
								{
									"constant": false,
									"id": 17,
									"name": "balance",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "556:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "556:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "578:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"name": "btp",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "687:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "687:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "705:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "btc1",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "713:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "713:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "732:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"name": "btc2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "739:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "739:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "758:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "btc3",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "765:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "765:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "784:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"name": "btc4",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "791:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "791:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "36",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "btc5",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "817:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "817:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "836:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "btc6",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "843:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "843:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "38",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "862:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 41,
									"name": "btc7",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "869:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 39,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "869:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "39",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "888:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 44,
									"name": "btc8",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "895:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "895:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "914:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1031:222:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "nP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1050:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "nPget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1055:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1050:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1050:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "nC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1070:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "nCget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1075:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1070:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1070:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "nEV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1090:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "nEVget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1096:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1090:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1090:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 71,
															"name": "nP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1236:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 72,
															"name": "nC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1239:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 73,
															"name": "nEV",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1242:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 74,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1235:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 58,
												"id": 75,
												"nodeType": "Return",
												"src": "1228:18:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getnPnCnEV",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "nPget",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "950:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "nCget",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "962:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"name": "nEVget",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "973:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:36:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "nP",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "nC",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1014:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "nEV",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1022:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1022:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1005:26:0"
									},
									"scope": 320,
									"src": "930:323:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1321:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "Tp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1331:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 85,
															"name": "Pexp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "btp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1343:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1336:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1331:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1331:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 90,
															"name": "Tp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1364:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 91,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 92,
												"nodeType": "Return",
												"src": "1356:11:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getProsumerTariff",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "Pexp",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1286:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1285:11:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "Tp",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1312:9:0"
									},
									"scope": 320,
									"src": "1259:115:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "1442:928:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "Cimp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1464:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323531",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1471:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_251_by_1",
															"typeString": "int_const 251"
														},
														"value": "251"
													},
													"src": "1464:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 242,
																"name": "Cimp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2125:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "323530",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2132:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "2125:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 245,
																"name": "Cimp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2139:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "333531",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2146:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_351_by_1",
																	"typeString": "int_const 351"
																},
																"value": "351"
															},
															"src": "2139:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2125:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "Cimp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2208:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "333530",
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2215:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_350_by_1",
																		"typeString": "int_const 350"
																	},
																	"value": "350"
																},
																"src": "2208:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 259,
																	"name": "Cimp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2222:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "343531",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2229:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_451_by_1",
																		"typeString": "int_const 451"
																	},
																	"value": "451"
																},
																"src": "2222:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 270,
																	"name": "Cimp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2291:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "343530",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2298:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"value": "450"
																},
																"src": "2291:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 280,
															"nodeType": "IfStatement",
															"src": "2288:55:0",
															"trueBody": {
																"id": 279,
																"nodeType": "Block",
																"src": "2302:41:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 273,
																				"name": "Tc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "2316:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "Cimp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "2321:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 275,
																					"name": "btc8",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 44,
																					"src": "2328:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2321:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2316:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 278,
																		"nodeType": "ExpressionStatement",
																		"src": "2316:16:0"
																	}
																]
															}
														},
														"id": 281,
														"nodeType": "IfStatement",
														"src": "2205:138:0",
														"trueBody": {
															"id": 269,
															"nodeType": "Block",
															"src": "2233:41:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 263,
																			"name": "Tc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "2247:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 264,
																				"name": "Cimp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2252:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 265,
																				"name": "btc7",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 41,
																				"src": "2259:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2252:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2247:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 268,
																	"nodeType": "ExpressionStatement",
																	"src": "2247:16:0"
																}
															]
														}
													},
													"id": 282,
													"nodeType": "IfStatement",
													"src": "2122:221:0",
													"trueBody": {
														"id": 255,
														"nodeType": "Block",
														"src": "2150:41:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 249,
																		"name": "Tc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "2164:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 250,
																			"name": "Cimp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2169:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 251,
																			"name": "btc6",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "2176:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2169:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2164:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 254,
																"nodeType": "ExpressionStatement",
																"src": "2164:16:0"
															}
														]
													}
												},
												"id": 283,
												"nodeType": "IfStatement",
												"src": "1461:882:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1475:633:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "Cimp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1492:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3531",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1499:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_51_by_1",
																		"typeString": "int_const 51"
																	},
																	"value": "51"
																},
																"src": "1492:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 114,
																			"name": "Cimp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "1572:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3530",
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1579:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_50_by_1",
																				"typeString": "int_const 50"
																			},
																			"value": "50"
																		},
																		"src": "1572:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 117,
																			"name": "Cimp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "1585:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "313031",
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1592:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_101_by_1",
																				"typeString": "int_const 101"
																			},
																			"value": "101"
																		},
																		"src": "1585:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1572:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 137,
																				"name": "Cimp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1687:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313030",
																				"id": 138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1694:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1687:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 140,
																				"name": "Cimp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1701:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313531",
																				"id": 141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1708:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_151_by_1",
																					"typeString": "int_const 151"
																				},
																				"value": "151"
																			},
																			"src": "1701:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1687:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 165,
																					"name": "Cimp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "1817:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "313530",
																					"id": 166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1824:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_150_by_1",
																						"typeString": "int_const 150"
																					},
																					"value": "150"
																				},
																				"src": "1817:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 168,
																					"name": "Cimp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "1831:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "323031",
																					"id": 169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1838:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_201_by_1",
																						"typeString": "int_const 201"
																					},
																					"value": "201"
																				},
																				"src": "1831:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1817:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 198,
																						"name": "Cimp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "1961:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "323030",
																						"id": 199,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1968:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_200_by_1",
																							"typeString": "int_const 200"
																						},
																						"value": "200"
																					},
																					"src": "1961:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 201,
																						"name": "Cimp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "1975:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "323531",
																						"id": 202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1982:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_251_by_1",
																							"typeString": "int_const 251"
																						},
																						"value": "251"
																					},
																					"src": "1975:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "1961:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": null,
																			"id": 236,
																			"nodeType": "IfStatement",
																			"src": "1958:140:0",
																			"trueBody": {
																				"id": 235,
																				"nodeType": "Block",
																				"src": "1986:112:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 205,
																								"name": "Tc",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 99,
																								"src": "2004:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 232,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 224,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 219,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 214,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 208,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "3530",
																															"id": 206,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2010:2:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_50_by_1",
																																"typeString": "int_const 50"
																															},
																															"value": "50"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"id": 207,
																															"name": "btc1",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 23,
																															"src": "2015:4:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2010:9:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 209,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2009:11:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "+",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 212,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "3530",
																															"id": 210,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2024:2:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_50_by_1",
																																"typeString": "int_const 50"
																															},
																															"value": "50"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"id": 211,
																															"name": "btc2",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 26,
																															"src": "2029:4:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2024:9:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 213,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2023:11:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2009:25:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "+",
																										"rightExpression": {
																											"argumentTypes": null,
																											"components": [
																												{
																													"argumentTypes": null,
																													"commonType": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"id": 217,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"argumentTypes": null,
																														"hexValue": "3530",
																														"id": 215,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "2038:2:0",
																														"subdenomination": null,
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_50_by_1",
																															"typeString": "int_const 50"
																														},
																														"value": "50"
																													},
																													"nodeType": "BinaryOperation",
																													"operator": "*",
																													"rightExpression": {
																														"argumentTypes": null,
																														"id": 216,
																														"name": "btc3",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 29,
																														"src": "2043:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "2038:9:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"id": 218,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "2037:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "2009:39:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 222,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "3530",
																													"id": 220,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2052:2:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_50_by_1",
																														"typeString": "int_const 50"
																													},
																													"value": "50"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"id": 221,
																													"name": "btc4",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 32,
																													"src": "2057:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "2052:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 223,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "2051:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2009:53:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"argumentTypes": null,
																									"components": [
																										{
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 230,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 227,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"id": 225,
																															"name": "Cimp",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 96,
																															"src": "2067:4:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"argumentTypes": null,
																															"hexValue": "3530",
																															"id": 226,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2072:2:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_50_by_1",
																																"typeString": "int_const 50"
																															},
																															"value": "50"
																														},
																														"src": "2067:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 228,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2066:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"argumentTypes": null,
																												"id": 229,
																												"name": "btc5",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 35,
																												"src": "2078:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2066:16:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 231,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "2065:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2009:74:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2004:79:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 234,
																						"nodeType": "ExpressionStatement",
																						"src": "2004:79:0"
																					}
																				]
																			}
																		},
																		"id": 237,
																		"nodeType": "IfStatement",
																		"src": "1814:284:0",
																		"trueBody": {
																			"id": 197,
																			"nodeType": "Block",
																			"src": "1842:98:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 172,
																							"name": "Tc",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 99,
																							"src": "1860:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 194,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 186,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 181,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 175,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "3530",
																													"id": 173,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "1866:2:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_50_by_1",
																														"typeString": "int_const 50"
																													},
																													"value": "50"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"id": 174,
																													"name": "btc1",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 23,
																													"src": "1871:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "1866:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 176,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "1865:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 179,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "3530",
																													"id": 177,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "1880:2:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_50_by_1",
																														"typeString": "int_const 50"
																													},
																													"value": "50"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"id": 178,
																													"name": "btc2",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 26,
																													"src": "1885:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "1880:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 180,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "1879:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1865:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"argumentTypes": null,
																									"components": [
																										{
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 184,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "3530",
																												"id": 182,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1894:2:0",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_50_by_1",
																													"typeString": "int_const 50"
																												},
																												"value": "50"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"argumentTypes": null,
																												"id": 183,
																												"name": "btc3",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 29,
																												"src": "1899:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "1894:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 185,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "1893:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1865:39:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 192,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"components": [
																												{
																													"argumentTypes": null,
																													"commonType": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"id": 189,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"argumentTypes": null,
																														"id": 187,
																														"name": "Cimp",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 96,
																														"src": "1909:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": "-",
																													"rightExpression": {
																														"argumentTypes": null,
																														"hexValue": "3530",
																														"id": 188,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "1914:2:0",
																														"subdenomination": null,
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_50_by_1",
																															"typeString": "int_const 50"
																														},
																														"value": "50"
																													},
																													"src": "1909:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"id": 190,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "1908:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"id": 191,
																											"name": "btc4",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 32,
																											"src": "1920:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "1908:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 193,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1907:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1865:60:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1860:65:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 196,
																					"nodeType": "ExpressionStatement",
																					"src": "1860:65:0"
																				}
																			]
																		}
																	},
																	"id": 238,
																	"nodeType": "IfStatement",
																	"src": "1684:414:0",
																	"trueBody": {
																		"id": 164,
																		"nodeType": "Block",
																		"src": "1712:84:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 144,
																						"name": "Tc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 99,
																						"src": "1730:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 161,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 153,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 147,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"hexValue": "3530",
																											"id": 145,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1736:2:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_50_by_1",
																												"typeString": "int_const 50"
																											},
																											"value": "50"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"id": 146,
																											"name": "btc1",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 23,
																											"src": "1741:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "1736:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 148,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1735:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 151,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"hexValue": "3530",
																											"id": 149,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1750:2:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_50_by_1",
																												"typeString": "int_const 50"
																											},
																											"value": "50"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"id": 150,
																											"name": "btc2",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 26,
																											"src": "1755:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "1750:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 152,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1749:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1735:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 159,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 156,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"id": 154,
																													"name": "Cimp",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 96,
																													"src": "1765:4:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "3530",
																													"id": 155,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "1770:2:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_50_by_1",
																														"typeString": "int_const 50"
																													},
																													"value": "50"
																												},
																												"src": "1765:7:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 157,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "1764:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"argumentTypes": null,
																										"id": 158,
																										"name": "btc3",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 29,
																										"src": "1776:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1764:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 160,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "1763:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1735:46:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1730:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 163,
																				"nodeType": "ExpressionStatement",
																				"src": "1730:51:0"
																			}
																		]
																	}
																},
																"id": 239,
																"nodeType": "IfStatement",
																"src": "1569:529:0",
																"trueBody": {
																	"id": 136,
																	"nodeType": "Block",
																	"src": "1596:70:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 121,
																					"name": "Tc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 99,
																					"src": "1614:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 124,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "3530",
																									"id": 122,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1620:2:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_50_by_1",
																										"typeString": "int_const 50"
																									},
																									"value": "50"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 123,
																									"name": "btc1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 23,
																									"src": "1625:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1620:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 125,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1619:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 131,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"components": [
																										{
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 128,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"id": 126,
																												"name": "Cimp",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 96,
																												"src": "1635:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "-",
																											"rightExpression": {
																												"argumentTypes": null,
																												"hexValue": "3530",
																												"id": 127,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1640:2:0",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_50_by_1",
																													"typeString": "int_const 50"
																												},
																												"value": "50"
																											},
																											"src": "1635:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 129,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "1634:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 130,
																									"name": "btc2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 26,
																									"src": "1646:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1634:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 132,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1633:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1619:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1614:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 135,
																			"nodeType": "ExpressionStatement",
																			"src": "1614:37:0"
																		}
																	]
																}
															},
															"id": 240,
															"nodeType": "IfStatement",
															"src": "1489:609:0",
															"trueBody": {
																"id": 113,
																"nodeType": "Block",
																"src": "1502:49:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 107,
																				"name": "Tc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "1520:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 108,
																					"name": "Cimp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "1525:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 109,
																					"name": "btc1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "1532:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1525:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1520:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 112,
																		"nodeType": "ExpressionStatement",
																		"src": "1520:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 284,
															"name": "Tc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "2360:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 285,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 100,
												"id": 286,
												"nodeType": "Return",
												"src": "2352:11:0"
											}
										]
									},
									"documentation": null,
									"id": 288,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getConsumerTariff",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "Cimp",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1407:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1406:11:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "Tc",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1433:9:0"
									},
									"scope": 320,
									"src": "1380:990:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2437:129:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2504:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2504:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 298,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															338,
															339
														],
														"referencedDeclaration": 338,
														"src": "2496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2496:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "2549:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2549:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 302,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2530:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2530:29:0"
											}
										]
									},
									"documentation": null,
									"id": 310,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "send",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2390:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2409:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2389:32:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:0"
									},
									"scope": 320,
									"src": "2376:190:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2607:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 313,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 314,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2624:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2624:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2613:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2613:20:0"
											}
										]
									},
									"documentation": null,
									"id": 319,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "balCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2589:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:0"
									},
									"scope": 320,
									"src": "2572:68:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 321,
							"src": "129:3436:0"
						}
					],
					"src": "34:3656:0"
				},
				"id": 0
			}
		}
	}
}